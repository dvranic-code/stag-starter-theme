(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function fetch_posts() {
  const loadMoreBtn = document.querySelector(".load--more");
  if (loadMoreBtn === null) {
    return;
  }
  let postsGrid = document.querySelector(".posts-grid");
  if (postsGrid) {
    if (document.querySelector(".posts-grid").dataset.page == document.querySelector(".posts-grid").dataset.max) {
      loadMoreBtn.style.display = "none";
    }
  } else {
    if (document.querySelector(".site-main").dataset.page == document.querySelector(".site-main").dataset.max) {
      loadMoreBtn.style.display = "none";
    }
  }
  loadMoreBtn.addEventListener("click", async e => {
    e.preventDefault();
    let currentPage = '';
    let postsGrid = document.querySelector(".posts-grid");
    if (postsGrid) {
      currentPage = document.querySelector(".posts-grid").dataset.page;
    } else {
      currentPage = document.querySelector(".site-main").dataset.page;
    }
    let postType = '';
    let numberOfPosts = '';
    if (postsGrid) {
      postType = document.querySelector(".posts-grid").dataset.post;
      numberOfPosts = document.querySelector(".posts-grid").dataset.number;
    }
    let maxPages = document.querySelector(".site-main").dataset.max;
    let isSearch = document.querySelector(".site-main").dataset.search === "is-search";
    let searchField = document.querySelector(".search-form__search-field");
    let searchQuery = '';
    if (searchField) {
      searchQuery = searchField.value;
    }
    let isBlock = postsGrid ? postsGrid.dataset.block === "is-block" : false;
    const postsGridWrapper = document.getElementsByClassName("posts-grid__wrapper")[0];
    const postsGridBtnWrapper = document.getElementsByClassName("posts-grid__btn-wrapper")[0];
    const moreData = new FormData();
    moreData.append("action", "load_more_posts");
    moreData.append("currentPage", currentPage);
    moreData.append("searchQuery", searchQuery);
    moreData.append("postType", postType);
    moreData.append("numberOfPosts", numberOfPosts);
    moreData.append('_nonce', WP_vars.nonce); // eslint-disable-line

    const dataCall = await fetch(WP_vars.ajaxURL, {
      // eslint-disable-line
      method: "POST",
      body: moreData
    }).then(res => {
      if (res.ok) {
        return res.json(); // Parse the JSON response
      } else {
        throw new Error(`Request failed with status: ${res.status}`);
      }
    }).then(data => {
      if (data && data.data) {
        const htmlString = data.data[0]; // Extract the HTML content from the response

        // const maxPages = data.data[1]; // Extract the max pages from the response for search

        postsGridBtnWrapper.insertAdjacentHTML("beforebegin", htmlString);
        if (!isSearch && !isBlock) {
          let getUrl = window.location;
          let baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
          window.history.pushState('', '', baseUrl + '/page/' + (parseInt(document.querySelector(".site-main").dataset.page) + 1));
        }
        document.querySelector(".site-main").dataset.page++;
        if (document.querySelector(".site-main").dataset.page == document.querySelector(".site-main").dataset.max) {
          loadMoreBtn.style.display = "none";
        }
        if (isBlock) {
          document.querySelector(".posts-grid").dataset.page++;
          if (document.querySelector(".posts-grid").dataset.page == document.querySelector(".posts-grid").dataset.max) {
            loadMoreBtn.style.display = "none";
          }
        }

        // if ( isSearch ) {
        //   if ( document.querySelector(".site-main").dataset.page == maxPages ) {
        //     loadMoreBtn.style.display = "none";
        //   }
        // }
      } else {
        console.warn('Invalid data received from the server');
      }
    }).catch(err => console.warn(err));
  });
}
(0, _utils.onReady)(() => {
  fetch_posts();
});

},{"../utils":6}],2:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function showMenu() {
  const navigation = document.getElementById("main-navigation");
  const menuItems = document.querySelectorAll("#main-navigation li.children-zero-level.menu-item-has-children");
  const menuOverlay = document.getElementsByClassName("site-header__nav-overlay")[0];
  if (navigation === null || menuItems.length === 0) {
    return;
  }
  menuItems.forEach(menuItem => {
    menuItem.addEventListener("mouseenter", function () {
      navigation.classList.add("menu-active");
      menuOverlay.classList.add("overlay-active");
      this.classList.add("active");
    });
    menuItem.addEventListener("mouseleave", function () {
      navigation.classList.remove("menu-active");
      menuOverlay.classList.remove("overlay-active");
      this.classList.remove("active");
    });
  });
  const subMenu = document.querySelectorAll('.sub-menu li.menu-item-has-children');
  subMenu.forEach(menuItem => {
    menuItem.addEventListener("mouseenter", function () {
      this.classList.add("active");
    });
    menuItem.addEventListener("mouseleave", function () {
      this.classList.remove("active");
    });
  });
}
function getMainNavWidth() {
  const mainNavWidth = document.getElementById("mainNavWidth");
  const getWidth = mainNavWidth.offsetWidth;
  if (getWidth === null) {
    return;
  }
  document.documentElement.style.setProperty("--mainNavWidth", getWidth + "px");
}
function toggleLanguageSwitcher(id, menuClass) {
  const body = document.getElementsByTagName('body')[0];
  const languageIcon = document.getElementById(id);
  const langSubMenu = document.getElementsByClassName(menuClass)[0];
  if (!languageIcon) return;
  languageIcon.addEventListener('click', e => {
    e.preventDefault();
    e.stopPropagation();
    langSubMenu.classList.toggle('active');
  });
  body.addEventListener('click', e => {
    if (!e.target.classList.contains(menuClass)) langSubMenu.classList.remove('active');
  });
}
function languageSwitcher() {
  toggleLanguageSwitcher("languageIcon", "lang-sub-menu");
  toggleLanguageSwitcher("languageIconMobile", "lang-sub-menu-mobile");
}
function triggerSearchBox() {
  const body = document.getElementsByTagName('body')[0];
  const triggerSearchBox = document.getElementById("triggerSearchBox");
  const triggerSearchBoxMobile = document.getElementById("triggerSearchBoxMobile");
  const searchPopup = document.getElementsByClassName("site-header__search-popup")[0];
  if (triggerSearchBox === null || searchPopup === null) {
    return;
  }
  function handleSearchBoxClick(e) {
    e.preventDefault();
    searchPopup.classList.toggle("active");
    body.classList.toggle("disable-scroll-search");
  }
  if (triggerSearchBox) {
    triggerSearchBox.addEventListener("click", handleSearchBoxClick);
  }
  if (triggerSearchBoxMobile) {
    triggerSearchBoxMobile.addEventListener("click", handleSearchBoxClick);
  }
}
function triggerMobileMenu() {
  const body = document.getElementsByTagName('body')[0];
  const hamburger = document.getElementsByClassName("site-header__mobile-wrap--hamburger")[0];
  const mobileMobileMenu = document.getElementsByClassName("mobile-menu")[0];
  if (hamburger === null) {
    return;
  }
  const childrenZeroLevel = document.querySelectorAll('#mobile-menu-navigation li.children-zero-level.menu-item-has-children');
  const childrenFirstLevel = document.querySelectorAll('#mobile-menu-navigation li.children-first-level.menu-item-has-children');
  childrenZeroLevel.forEach(zeroItem => {
    const subMenuToggle = document.createElement('span');
    subMenuToggle.classList.add('sub-menu-toggle');
    subMenuToggle.addEventListener('click', function () {
      this.classList.toggle('active');
      this.parentElement.classList.toggle('active');
    });
    zeroItem.appendChild(subMenuToggle);
  });
  childrenFirstLevel.forEach(firstLevelItem => {
    const subMenuToggleFirstLevel = document.createElement('span');
    subMenuToggleFirstLevel.classList.add('sub-menu-level-two-toggle');
    subMenuToggleFirstLevel.addEventListener('click', function () {
      this.classList.toggle('menu-active');
      this.parentElement.classList.toggle('menu-active');
    });
    firstLevelItem.appendChild(subMenuToggleFirstLevel);
  });
  hamburger.addEventListener("click", function () {
    this.classList.toggle("hamburger--active");
    mobileMobileMenu.classList.toggle("active");
    body.classList.toggle("disable-scroll-search");
  });
}
(0, _utils.onReady)(() => {
  showMenu();
  languageSwitcher();
  triggerSearchBox();
  triggerMobileMenu();
  setTimeout(() => {
    getMainNavWidth();
  }, 2000);
});

},{"../utils":6}],3:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function imgPopup() {
  const cards = document.querySelectorAll(".certificate-block__grid--card");
  cards.forEach(function (card) {
    card.addEventListener("click", function (e) {
      e.preventDefault();
      let popup = document.createElement("div");
      popup.style.position = "fixed";
      popup.style.top = "0";
      popup.style.left = "0";
      popup.style.width = "100%";
      popup.style.height = "100%";
      popup.style.backgroundColor = "rgba(0, 0, 0, 0.25)";
      popup.style.display = "flex";
      popup.style.justifyContent = "center";
      popup.style.alignItems = "center";
      popup.style.zIndex = "1000";
      popup.classList.add("img-popup");
      let img = document.createElement("img");
      img.src = this.getAttribute("data-img-url"); // get the image URL from the data attribute
      img.style.maxWidth = "90%";
      popup.appendChild(img);
      document.body.appendChild(popup);
      document.body.style.overflow = "hidden"; // Prevent scrolling

      popup.addEventListener("click", function () {
        document.body.removeChild(popup);
        document.body.style.overflow = "auto"; // Enable scrolling again
      });
    });
  });
}

(0, _utils.onReady)(() => {
  imgPopup();
});

},{"../utils":6}],4:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function initContentSwiper() {
  if (!document.querySelectorAll(".content-slider__swiper").length) return;
  const content_swiper = new Swiper(".content-slider__swiper", {
    // eslint-disable-line
    slidesPerView: 1,
    spaceBetween: 13.9,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1,
        spaceBetween: 20
      },
      520: {
        slidesPerView: 2,
        spaceBetween: 20
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 24
      }
    },
    pagination: {
      el: ".swiper-pagination",
      type: "progressbar"
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function initTimelineSwiper() {
  if (!document.querySelectorAll(".timeline-slider__swiper").length) return;
  const timline_swiper = new Swiper(".timeline-slider__swiper", {
    // eslint-disable-line
    slidesPerView: 5,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1
      },
      501: {
        slidesPerView: 2
      },
      992: {
        slidesPerView: 3
      },
      1100: {
        slidesPerView: 4
      }
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function calcTimelineSwiperHeight() {
  const slides = document.querySelectorAll('.timeline-slider__slide');
  if (!slides.length) return;
  let maxHeight = 0;
  slides.forEach(function (slide) {
    const timestamp = slide.querySelector('.timeline-slider__timestamp');
    const content = slide.querySelector('.timeline-slider__content');
    if (!timestamp || !content) return;
    let timestampHeight = timestamp.offsetHeight;
    let contentHeight = content.offsetHeight;
    maxHeight = Math.max(maxHeight, timestampHeight, contentHeight);
  });
  slides.forEach(function (slide) {
    const timestamp = slide.querySelector('.timeline-slider__timestamp');
    const content = slide.querySelector('.timeline-slider__content');
    if (!timestamp || !content) return;
    timestamp.style.height = maxHeight + 'px';
    content.style.height = maxHeight + 'px';
  });
}
function timlineSwiperMobile() {
  let slides = document.querySelectorAll('.timeline-slider__slide');
  if (!slides.length) return;
  if (window.matchMedia("(max-width: 501px)").matches) {
    slides.forEach(function (slide) {
      if (!slide.classList.contains('swiper-slide__initial')) {
        slide.classList.add('swiper-slide__initial');
        slide.classList.add('swiper-slide__initial--mobile');
      }
    });
  } else {
    slides.forEach(function (slide) {
      if (slide.classList.contains('swiper-slide__initial--mobile')) {
        slide.classList.remove('swiper-slide__initial');
        slide.classList.remove('swiper-slide__initial--mobile');
      }
    });
  }
}
let profiles_swiper; // Declare the variable outside the functions so we can access it inside all functions

function initMobileProfiles() {
  if (!document.querySelectorAll(".block-profiles__swiper").length) return;
  profiles_swiper = new Swiper(".block-profiles__swiper", {
    // eslint-disable-line
    slidesPerView: 1,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1
      },
      768: {
        slidesPerView: 2,
        spaceBetween: 30
      },
      992: {
        slidesPerView: 2,
        spaceBetween: 30
      }
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function destroyMobileProfiles() {
  if (profiles_swiper !== undefined && profiles_swiper !== null) {
    profiles_swiper.destroy(true, true);
    profiles_swiper = null; // Reset the variable
  }
}

function calcOffsetElementHeight() {
  const offsetElements = document.querySelectorAll('.offset-element');
  const offsetElementContents = document.querySelectorAll('.block-profiles__swiper--wrapper--content');
  if (!offsetElements.length || !offsetElementContents.length) return;
  offsetElements.forEach(function (offsetElement, index) {
    const offsetElementHeight = offsetElement.offsetHeight;

    // Use the index of the current offsetElement to access the corresponding offsetElementContent
    const offsetElementContent = offsetElementContents[index];
    if (!offsetElementContent) return;
    offsetElementContent.style.bottom = -offsetElementHeight + 'px';
  });
}
(0, _utils.onReady)(() => {
  initContentSwiper();
  initTimelineSwiper();
  if (window.innerWidth > 501) {
    calcTimelineSwiperHeight();
  }
  timlineSwiperMobile();
  window.addEventListener('resize', (0, _utils.debounce)(timlineSwiperMobile, 200));
  window.addEventListener('resize', (0, _utils.debounce)(function () {
    if (window.matchMedia("(min-width: 768px) and (max-width: 992px)").matches || window.matchMedia("(min-width: 992px) and (max-width: 1366px)").matches || window.matchMedia("(min-width: 1366px)").matches) {
      calcTimelineSwiperHeight();
    }
  }, 200));
  window.addEventListener('resize', (0, _utils.debounce)(function () {
    if (window.innerWidth < 1024) {
      initMobileProfiles();
    } else {
      destroyMobileProfiles();
    }
  }, 200));
  if (window.innerWidth < 1024) {
    initMobileProfiles();
  } else {
    destroyMobileProfiles();
  }
  calcOffsetElementHeight();

  // Sorry for this, but I needed to use external libraries to make this work
  const marqueeSlider = document.getElementById('marqueeSlider');
  if (!marqueeSlider) return;
  jQuery('#marqueeSlider').grouploop({
    velocity: 1,
    forward: false,
    pauseOnHover: true,
    childNode: ".item",
    childWrapper: ".item-wrap",
    complete: function () {
      console.log("Initialized a grouploop with id: " + jQuery(this).attr('id'));
    },
    stickFirstItem: false
  });
});

},{"../utils":6}],5:[function(require,module,exports){
"use strict";

(() => {
  require("./components/header.js");
  require("./components/swiper.js");
  require("./components/fetch-posts.js");
  require("./components/img-popup.js");
})();

},{"./components/fetch-posts.js":1,"./components/header.js":2,"./components/img-popup.js":3,"./components/swiper.js":4}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onReady = exports.debounce = void 0;
/**
 *
 * @param {Function} fn The user defined function to execute only upon successful DOM load
 */
const onReady = fn => {
  if (document.readyState !== "loading") {
    fn();
  } else {
    document.addEventListener("DOMContentLoaded", fn);
  }
};

/**
 * Execute a given function after a giving timeout period
 * @param {Function} fn The function to call
 * @param {number} timeout In miliseconds the amount of time to wait
 * @returns {Function}
 */
exports.onReady = onReady;
const debounce = (fn, timeout) => {
  let timeoutId;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => fn.apply(this, args), timeout);
  };
};
exports.debounce = debounce;

},{}]},{},[1,2,3,4,5,6])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvcHVibGljL3NyYy9qcy9jb21wb25lbnRzL2ZldGNoLXBvc3RzLmpzIiwiYXNzZXRzL3B1YmxpYy9zcmMvanMvY29tcG9uZW50cy9oZWFkZXIuanMiLCJhc3NldHMvcHVibGljL3NyYy9qcy9jb21wb25lbnRzL2ltZy1wb3B1cC5qcyIsImFzc2V0cy9wdWJsaWMvc3JjL2pzL2NvbXBvbmVudHMvc3dpcGVyLmpzIiwiYXNzZXRzL3B1YmxpYy9zcmMvanMvZGVmYXVsdC5qcyIsImFzc2V0cy9wdWJsaWMvc3JjL2pzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsWUFBWTs7QUFFWixJQUFBLE1BQUEsR0FBQSxPQUFBO0FBRUEsU0FBUyxXQUFXLENBQUEsRUFBRztFQUNyQixNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQztFQUV6RCxJQUFJLFdBQVcsS0FBSyxJQUFJLEVBQUU7SUFDeEI7RUFDRjtFQUVBLElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDO0VBRXJELElBQUssU0FBUyxFQUFHO0lBQ2YsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO01BQzNHLFdBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU07SUFDcEM7RUFDRixDQUFDLE1BQU07SUFDTCxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7TUFDekcsV0FBVyxDQUFDLEtBQUssQ0FBQyxPQUFP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QUNBO0FBQ08sTUFBTSxPQUFPLEdBQUksRUFBRSxJQUFLO0VBQzdCLElBQUksUUFBUSxDQUFDLFVBQVUsS0FBSyxTQUFTLEVBQUU7SUFDckMsRUFBRSxDQUFDLENBQUM7RUFDTixDQUFDLE1BQU07SUFDTCxRQUFRLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxDQUFDO0VBQ25EO0FBQ0YsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQSxPQUFBLENBQUEsT0FBQSxHQUFBLE9BQUE7QUFNTyxNQUFNLFFBQVEsR0FBRyxDQUFDLEVBQUUsRUFBRSxPQUFPLEtBQUs7RUFDdkMsSUFBSSxTQUFTO0VBRWIsT0FBTyxZQUFtQjtJQUFBLFNBQUEsSUFBQSxHQUFBLFNBQUEsQ0FBQSxNQUFBLEVBQU4sSUFBSSxPQUFBLEtBQUEsQ0FBQSxJQUFBLEdBQUEsSUFBQSxNQUFBLElBQUEsR0FBQSxJQUFBLEVBQUEsSUFBQTtNQUFKLElBQUksQ0FBQSxJQUFBLElBQUEsU0FBQSxDQUFBLElBQUE7SUFBQTtJQUN0QixZQUFZLENBQUMsU0FBUyxDQUFDO0lBQ3ZCLFNBQVMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUM7RUFDN0QsQ0FBQztBQUNILENBQUM7QUFBQyxPQUFBLENBQUEsUUFBQSxHQUFBLFFBQUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgb25SZWFkeSB9IGZyb20gXCIuLi91dGlsc1wiO1xuXG5mdW5jdGlvbiBmZXRjaF9wb3N0cygpIHtcbiAgY29uc3QgbG9hZE1vcmVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWQtLW1vcmVcIik7XG5cbiAgaWYgKGxvYWRNb3JlQnRuID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IHBvc3RzR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKTtcblxuICBpZiAoIHBvc3RzR3JpZCApIHtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQucGFnZSA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RzLWdyaWRcIikuZGF0YXNldC5tYXgpIHtcbiAgICAgIGxvYWRNb3JlQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZSA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0Lm1heCkge1xuICAgICAgbG9hZE1vcmVCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbiAgfVxuXG4gIGxvYWRNb3JlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhc3luYyAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGxldCBjdXJyZW50UGFnZSA9ICcnO1xuXG4gICAgbGV0IHBvc3RzR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKTtcblxuICAgIGlmICggcG9zdHNHcmlkICkge1xuICAgICAgY3VycmVudFBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RzLWdyaWRcIikuZGF0YXNldC5wYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50UGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZTtcbiAgICB9XG5cbiAgICBsZXQgcG9zdFR5cGUgPSAnJztcbiAgICBsZXQgbnVtYmVyT2ZQb3N0cyA9ICcnO1xuXG4gICAgaWYgKCBwb3N0c0dyaWQgKSB7XG4gICAgICBwb3N0VHlwZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKS5kYXRhc2V0LnBvc3Q7XG4gICAgICBudW1iZXJPZlBvc3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQubnVtYmVyO1xuICAgIH1cbiAgICBcbiAgICBsZXQgbWF4UGFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0Lm1heDtcbiAgICBsZXQgaXNTZWFyY2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0LnNlYXJjaCA9PT0gXCJpcy1zZWFyY2hcIjtcblxuICAgIGxldCBzZWFyY2hGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VhcmNoLWZvcm1fX3NlYXJjaC1maWVsZFwiKTtcblxuICAgIGxldCBzZWFyY2hRdWVyeSA9ICcnO1xuXG4gICAgaWYgKCBzZWFyY2hGaWVsZCApIHtcbiAgICAgIHNlYXJjaFF1ZXJ5ID0gc2VhcmNoRmllbGQudmFsdWU7XG4gICAgfVxuXG4gICAgbGV0IGlzQmxvY2sgPSBwb3N0c0dyaWQgPyBwb3N0c0dyaWQuZGF0YXNldC5ibG9jayA9PT0gXCJpcy1ibG9ja1wiIDogZmFsc2U7XG5cbiAgICBjb25zdCBwb3N0c0dyaWRXcmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInBvc3RzLWdyaWRfX3dyYXBwZXJcIilbMF07XG4gICAgY29uc3QgcG9zdHNHcmlkQnRuV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJwb3N0cy1ncmlkX19idG4td3JhcHBlclwiKVswXTtcblxuICAgIGNvbnN0IG1vcmVEYXRhID0gbmV3IEZvcm1EYXRhKCk7XG5cbiAgICBtb3JlRGF0YS5hcHBlbmQoXCJhY3Rpb25cIiwgXCJsb2FkX21vcmVfcG9zdHNcIik7XG4gICAgbW9yZURhdGEuYXBwZW5kKFwiY3VycmVudFBhZ2VcIiwgY3VycmVudFBhZ2UpO1xuICAgIG1vcmVEYXRhLmFwcGVuZChcInNlYXJjaFF1ZXJ5XCIsIHNlYXJjaFF1ZXJ5KTtcbiAgICBtb3JlRGF0YS5hcHBlbmQoXCJwb3N0VHlwZVwiLCBwb3N0VHlwZSk7XG4gICAgbW9yZURhdGEuYXBwZW5kKFwibnVtYmVyT2ZQb3N0c1wiLCBudW1iZXJPZlBvc3RzKTtcbiAgICBtb3JlRGF0YS5hcHBlbmQoJ19ub25jZScsIFdQX3ZhcnMubm9uY2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbiAgICBjb25zdCBkYXRhQ2FsbCA9IGF3YWl0IGZldGNoKFdQX3ZhcnMuYWpheFVSTCwgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgYm9keTogbW9yZURhdGFcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7IC8vIFBhcnNlIHRoZSBKU09OIHJlc3BvbnNlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1czogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5kYXRhKSB7XG4gICAgICAgICAgY29uc3QgaHRtbFN0cmluZyA9IGRhdGEuZGF0YVswXTsgLy8gRXh0cmFjdCB0aGUgSFRNTCBjb250ZW50IGZyb20gdGhlIHJlc3BvbnNlXG5cbiAgICAgICAgICAvLyBjb25zdCBtYXhQYWdlcyA9IGRhdGEuZGF0YVsxXTsgLy8gRXh0cmFjdCB0aGUgbWF4IHBhZ2VzIGZyb20gdGhlIHJlc3BvbnNlIGZvciBzZWFyY2hcblxuICAgICAgICAgIHBvc3RzR3JpZEJ0bldyYXBwZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlYmVnaW5cIiwgaHRtbFN0cmluZyk7XG5cbiAgICAgICAgICBpZiAoICEgaXNTZWFyY2ggJiYgISBpc0Jsb2NrICkge1xuICAgICAgICAgICAgbGV0IGdldFVybCA9IHdpbmRvdy5sb2NhdGlvbjtcbiAgICAgICAgICAgIGxldCBiYXNlVXJsID0gZ2V0VXJsLnByb3RvY29sICsgXCIvL1wiICsgZ2V0VXJsLmhvc3QgKyBcIi9cIiArIGdldFVybC5wYXRobmFtZS5zcGxpdCgnLycpWzFdO1xuICAgICAgICAgICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKCcnLCAnJywgYmFzZVVybCArICcvcGFnZS8nICsgKHBhcnNlSW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZSkgKyAxKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5wYWdlKys7XG5cbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5wYWdlID09IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQubWF4KSB7XG4gICAgICAgICAgICBsb2FkTW9yZUJ0bi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIGlmICggaXNCbG9jayApIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKS5kYXRhc2V0LnBhZ2UrKztcblxuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKS5kYXRhc2V0LnBhZ2UgPT0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQubWF4KSB7XG4gICAgICAgICAgICAgIGxvYWRNb3JlQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBpZiAoIGlzU2VhcmNoICkge1xuICAgICAgICAgIC8vICAgaWYgKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0LnBhZ2UgPT0gbWF4UGFnZXMgKSB7XG4gICAgICAgICAgLy8gICAgIGxvYWRNb3JlQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAvLyAgIH1cbiAgICAgICAgICAvLyB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdJbnZhbGlkIGRhdGEgcmVjZWl2ZWQgZnJvbSB0aGUgc2VydmVyJyk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS53YXJuKGVycikpO1xuICB9KTtcbn1cblxub25SZWFkeSgoKSA9PiB7XG4gIGZldGNoX3Bvc3RzKCk7XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBvblJlYWR5IH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5cbmZ1bmN0aW9uIHNob3dNZW51KCkge1xuICBjb25zdCBuYXZpZ2F0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluLW5hdmlnYXRpb25cIik7XG4gIGNvbnN0IG1lbnVJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjbWFpbi1uYXZpZ2F0aW9uIGxpLmNoaWxkcmVuLXplcm8tbGV2ZWwubWVudS1pdGVtLWhhcy1jaGlsZHJlblwiKTtcbiAgY29uc3QgbWVudU92ZXJsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxuICAgIFwic2l0ZS1oZWFkZXJfX25hdi1vdmVybGF5XCJcbiAgKVswXTtcbiAgXG5cbiAgaWYgKG5hdmlnYXRpb24gPT09IG51bGwgfHwgbWVudUl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIG1lbnVJdGVtcy5mb3JFYWNoKChtZW51SXRlbSkgPT4ge1xuICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgbmF2aWdhdGlvbi5jbGFzc0xpc3QuYWRkKFwibWVudS1hY3RpdmVcIik7XG4gICAgICBtZW51T3ZlcmxheS5jbGFzc0xpc3QuYWRkKFwib3ZlcmxheS1hY3RpdmVcIik7XG4gICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgfSk7XG4gIFxuICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgbmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwibWVudS1hY3RpdmVcIik7XG4gICAgICBtZW51T3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKFwib3ZlcmxheS1hY3RpdmVcIik7XG4gICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgfSk7XG4gIH0pO1xuXG4gIFxuICBjb25zdCBzdWJNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN1Yi1tZW51IGxpLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4nKTtcbiAgXG4gIHN1Yk1lbnUuZm9yRWFjaCgobWVudUl0ZW0pID0+IHtcbiAgICBtZW51SXRlbS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICB9KTtcbiAgXG4gICAgbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIiwgZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgfSk7XG4gIH0pO1xuXG59XG5cbmZ1bmN0aW9uIGdldE1haW5OYXZXaWR0aCgpIHtcbiAgY29uc3QgbWFpbk5hdldpZHRoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluTmF2V2lkdGhcIik7XG4gIGNvbnN0IGdldFdpZHRoID0gbWFpbk5hdldpZHRoLm9mZnNldFdpZHRoO1xuXG4gIGlmIChnZXRXaWR0aCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShcIi0tbWFpbk5hdldpZHRoXCIsIGdldFdpZHRoICsgXCJweFwiKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlTGFuZ3VhZ2VTd2l0Y2hlcihpZCwgbWVudUNsYXNzKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdO1xuICBjb25zdCBsYW5ndWFnZUljb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gIGNvbnN0IGxhbmdTdWJNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShtZW51Q2xhc3MpWzBdO1xuXG4gIGlmICghbGFuZ3VhZ2VJY29uKSByZXR1cm47XG5cbiAgbGFuZ3VhZ2VJY29uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgbGFuZ1N1Yk1lbnUuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG4gIH0pO1xuXG4gIGJvZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICBpZiAoIWUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhtZW51Q2xhc3MpKSBsYW5nU3ViTWVudS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGxhbmd1YWdlU3dpdGNoZXIoKSB7XG4gIHRvZ2dsZUxhbmd1YWdlU3dpdGNoZXIoXCJsYW5ndWFnZUljb25cIiwgXCJsYW5nLXN1Yi1tZW51XCIpO1xuICB0b2dnbGVMYW5ndWFnZVN3aXRjaGVyKFwibGFuZ3VhZ2VJY29uTW9iaWxlXCIsIFwibGFuZy1zdWItbWVudS1tb2JpbGVcIik7XG59XG5cbmZ1bmN0aW9uIHRyaWdnZXJTZWFyY2hCb3goKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdO1xuICBjb25zdCB0cmlnZ2VyU2VhcmNoQm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmlnZ2VyU2VhcmNoQm94XCIpO1xuICBjb25zdCB0cmlnZ2VyU2VhcmNoQm94TW9iaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0cmlnZ2VyU2VhcmNoQm94TW9iaWxlXCIpO1xuICBjb25zdCBzZWFyY2hQb3B1cCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzaXRlLWhlYWRlcl9fc2VhcmNoLXBvcHVwXCIpWzBdO1xuXG4gIGlmICh0cmlnZ2VyU2VhcmNoQm94ID09PSBudWxsIHx8IHNlYXJjaFBvcHVwID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU2VhcmNoQm94Q2xpY2soZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBzZWFyY2hQb3B1cC5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgIGJvZHkuY2xhc3NMaXN0LnRvZ2dsZShcImRpc2FibGUtc2Nyb2xsLXNlYXJjaFwiKTtcbiAgfVxuXG4gIGlmICh0cmlnZ2VyU2VhcmNoQm94KSB7XG4gICAgdHJpZ2dlclNlYXJjaEJveC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlU2VhcmNoQm94Q2xpY2spO1xuICB9XG5cbiAgaWYgKHRyaWdnZXJTZWFyY2hCb3hNb2JpbGUpIHtcbiAgICB0cmlnZ2VyU2VhcmNoQm94TW9iaWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVTZWFyY2hCb3hDbGljayk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdHJpZ2dlck1vYmlsZU1lbnUoKSB7XG4gIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdO1xuICBjb25zdCBoYW1idXJnZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwic2l0ZS1oZWFkZXJfX21vYmlsZS13cmFwLS1oYW1idXJnZXJcIilbMF07XG4gIGNvbnN0IG1vYmlsZU1vYmlsZU1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibW9iaWxlLW1lbnVcIilbMF07XG5cbiAgaWYgKGhhbWJ1cmdlciA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGNoaWxkcmVuWmVyb0xldmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI21vYmlsZS1tZW51LW5hdmlnYXRpb24gbGkuY2hpbGRyZW4temVyby1sZXZlbC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuJyk7XG4gIGNvbnN0IGNoaWxkcmVuRmlyc3RMZXZlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNtb2JpbGUtbWVudS1uYXZpZ2F0aW9uIGxpLmNoaWxkcmVuLWZpcnN0LWxldmVsLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4nKTtcbiAgXG4gIGNoaWxkcmVuWmVyb0xldmVsLmZvckVhY2goKHplcm9JdGVtKSA9PiB7XG4gICAgY29uc3Qgc3ViTWVudVRvZ2dsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBzdWJNZW51VG9nZ2xlLmNsYXNzTGlzdC5hZGQoJ3N1Yi1tZW51LXRvZ2dsZScpO1xuICAgIFxuICAgIHN1Yk1lbnVUb2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xuICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xuICAgIH0pO1xuICAgIFxuICAgIHplcm9JdGVtLmFwcGVuZENoaWxkKHN1Yk1lbnVUb2dnbGUpO1xuICB9KTtcblxuICBjaGlsZHJlbkZpcnN0TGV2ZWwuZm9yRWFjaCgoZmlyc3RMZXZlbEl0ZW0pID0+IHtcbiAgICBjb25zdCBzdWJNZW51VG9nZ2xlRmlyc3RMZXZlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICBzdWJNZW51VG9nZ2xlRmlyc3RMZXZlbC5jbGFzc0xpc3QuYWRkKCdzdWItbWVudS1sZXZlbC10d28tdG9nZ2xlJyk7XG4gIFxuICAgIHN1Yk1lbnVUb2dnbGVGaXJzdExldmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5jbGFzc0xpc3QudG9nZ2xlKCdtZW51LWFjdGl2ZScpO1xuICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ21lbnUtYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICBmaXJzdExldmVsSXRlbS5hcHBlbmRDaGlsZChzdWJNZW51VG9nZ2xlRmlyc3RMZXZlbCk7XG4gIH0pO1xuXG4gIGhhbWJ1cmdlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QudG9nZ2xlKFwiaGFtYnVyZ2VyLS1hY3RpdmVcIik7XG4gICAgbW9iaWxlTW9iaWxlTWVudS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgIGJvZHkuY2xhc3NMaXN0LnRvZ2dsZShcImRpc2FibGUtc2Nyb2xsLXNlYXJjaFwiKTtcbiAgfSk7XG59XG5cbm9uUmVhZHkoKCkgPT4ge1xuICBzaG93TWVudSgpO1xuICBsYW5ndWFnZVN3aXRjaGVyKCk7XG4gIHRyaWdnZXJTZWFyY2hCb3goKTtcbiAgdHJpZ2dlck1vYmlsZU1lbnUoKTtcblxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBnZXRNYWluTmF2V2lkdGgoKTtcbiAgfSwgMjAwMCk7XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBvblJlYWR5IH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5cbmZ1bmN0aW9uIGltZ1BvcHVwKCkge1xuICBjb25zdCBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2VydGlmaWNhdGUtYmxvY2tfX2dyaWQtLWNhcmRcIik7XG4gIGNhcmRzLmZvckVhY2goZnVuY3Rpb24gKGNhcmQpIHtcbiAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgbGV0IHBvcHVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIHBvcHVwLnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICAgICAgcG9wdXAuc3R5bGUudG9wID0gXCIwXCI7XG4gICAgICBwb3B1cC5zdHlsZS5sZWZ0ID0gXCIwXCI7XG4gICAgICBwb3B1cC5zdHlsZS53aWR0aCA9IFwiMTAwJVwiO1xuICAgICAgcG9wdXAuc3R5bGUuaGVpZ2h0ID0gXCIxMDAlXCI7XG4gICAgICBwb3B1cC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoMCwgMCwgMCwgMC4yNSlcIjtcbiAgICAgIHBvcHVwLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgICAgIHBvcHVwLnN0eWxlLmp1c3RpZnlDb250ZW50ID0gXCJjZW50ZXJcIjtcbiAgICAgIHBvcHVwLnN0eWxlLmFsaWduSXRlbXMgPSBcImNlbnRlclwiO1xuICAgICAgcG9wdXAuc3R5bGUuekluZGV4ID0gXCIxMDAwXCI7XG4gICAgICBwb3B1cC5jbGFzc0xpc3QuYWRkKFwiaW1nLXBvcHVwXCIpO1xuXG4gICAgICBsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgIGltZy5zcmMgPSB0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtaW1nLXVybFwiKTsgLy8gZ2V0IHRoZSBpbWFnZSBVUkwgZnJvbSB0aGUgZGF0YSBhdHRyaWJ1dGVcbiAgICAgIGltZy5zdHlsZS5tYXhXaWR0aCA9IFwiOTAlXCI7XG5cbiAgICAgIHBvcHVwLmFwcGVuZENoaWxkKGltZyk7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcHVwKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiOyAvLyBQcmV2ZW50IHNjcm9sbGluZ1xuXG4gICAgICBwb3B1cC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHBvcHVwKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiYXV0b1wiOyAvLyBFbmFibGUgc2Nyb2xsaW5nIGFnYWluXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbm9uUmVhZHkoKCkgPT4ge1xuICBpbWdQb3B1cCgpO1xufSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgb25SZWFkeSwgZGVib3VuY2UgfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuZnVuY3Rpb24gaW5pdENvbnRlbnRTd2lwZXIoKSB7XG4gIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jb250ZW50LXNsaWRlcl9fc3dpcGVyXCIpLmxlbmd0aCkgcmV0dXJuO1xuXG4gIGNvbnN0IGNvbnRlbnRfc3dpcGVyID0gbmV3IFN3aXBlcihcIi5jb250ZW50LXNsaWRlcl9fc3dpcGVyXCIsIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgc3BhY2VCZXR3ZWVuOiAxMy45LFxuICAgIGxvb3A6IGZhbHNlLFxuICAgIGJyZWFrcG9pbnRzOiB7XG4gICAgICAwOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgIHNwYWNlQmV0d2VlbjogMjBcbiAgICAgIH0sXG4gICAgICA1MjA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMixcbiAgICAgICAgc3BhY2VCZXR3ZWVuOiAyMFxuICAgICAgfSxcbiAgICAgIDEwMjQ6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMyxcbiAgICAgICAgc3BhY2VCZXR3ZWVuOiAyNFxuICAgICAgfVxuICAgIH0sXG4gICAgcGFnaW5hdGlvbjoge1xuICAgICAgZWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uXCIsXG4gICAgICB0eXBlOiBcInByb2dyZXNzYmFyXCJcbiAgICB9LFxuICAgIG5hdmlnYXRpb246IHtcbiAgICAgIHByZXZFbDogXCIuc3dpcGVyLXBhZ2luYXRpb25fX3N3aXBlci1idXR0b24tcHJldlwiLFxuICAgICAgbmV4dEVsOiBcIi5zd2lwZXItcGFnaW5hdGlvbl9fc3dpcGVyLWJ1dHRvbi1uZXh0XCJcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbml0VGltZWxpbmVTd2lwZXIoKSB7XG4gIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50aW1lbGluZS1zbGlkZXJfX3N3aXBlclwiKS5sZW5ndGgpIHJldHVybjtcblxuICBjb25zdCB0aW1saW5lX3N3aXBlciA9IG5ldyBTd2lwZXIoXCIudGltZWxpbmUtc2xpZGVyX19zd2lwZXJcIiwgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgc2xpZGVzUGVyVmlldzogNSxcbiAgICBsb29wOiBmYWxzZSxcbiAgICBicmVha3BvaW50czoge1xuICAgICAgMDoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAxXG4gICAgICB9LFxuICAgICAgNTAxOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDJcbiAgICAgIH0sXG4gICAgICA5OTI6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogM1xuICAgICAgfSxcbiAgICAgIDExMDA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogNFxuICAgICAgfVxuICAgIH0sXG4gICAgbmF2aWdhdGlvbjoge1xuICAgICAgcHJldkVsOiBcIi5zd2lwZXItcGFnaW5hdGlvbl9fc3dpcGVyLWJ1dHRvbi1wcmV2XCIsXG4gICAgICBuZXh0RWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uX19zd2lwZXItYnV0dG9uLW5leHRcIlxuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNhbGNUaW1lbGluZVN3aXBlckhlaWdodCgpIHtcbiAgY29uc3Qgc2xpZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRpbWVsaW5lLXNsaWRlcl9fc2xpZGUnKTtcblxuICBpZiAoIXNsaWRlcy5sZW5ndGgpIHJldHVybjtcblxuICBsZXQgbWF4SGVpZ2h0ID0gMDtcblxuICBzbGlkZXMuZm9yRWFjaChmdW5jdGlvbiggc2xpZGUgKSB7XG4gICAgY29uc3QgdGltZXN0YW1wID0gc2xpZGUucXVlcnlTZWxlY3RvcignLnRpbWVsaW5lLXNsaWRlcl9fdGltZXN0YW1wJyk7XG4gICAgY29uc3QgY29udGVudCA9IHNsaWRlLnF1ZXJ5U2VsZWN0b3IoJy50aW1lbGluZS1zbGlkZXJfX2NvbnRlbnQnKTtcblxuICAgIGlmICghdGltZXN0YW1wIHx8ICFjb250ZW50KSByZXR1cm47XG4gICAgbGV0IHRpbWVzdGFtcEhlaWdodCA9IHRpbWVzdGFtcC5vZmZzZXRIZWlnaHQ7XG4gICAgbGV0IGNvbnRlbnRIZWlnaHQgPSBjb250ZW50Lm9mZnNldEhlaWdodDtcblxuICAgIG1heEhlaWdodCA9IE1hdGgubWF4KG1heEhlaWdodCwgdGltZXN0YW1wSGVpZ2h0LCBjb250ZW50SGVpZ2h0KTtcbiAgfSk7XG5cbiAgc2xpZGVzLmZvckVhY2goZnVuY3Rpb24oIHNsaWRlICkge1xuICAgIGNvbnN0IHRpbWVzdGFtcCA9IHNsaWRlLnF1ZXJ5U2VsZWN0b3IoJy50aW1lbGluZS1zbGlkZXJfX3RpbWVzdGFtcCcpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBzbGlkZS5xdWVyeVNlbGVjdG9yKCcudGltZWxpbmUtc2xpZGVyX19jb250ZW50Jyk7XG5cbiAgICBpZiAoIXRpbWVzdGFtcCB8fCAhY29udGVudCkgcmV0dXJuO1xuICAgIHRpbWVzdGFtcC5zdHlsZS5oZWlnaHQgPSBtYXhIZWlnaHQgKyAncHgnO1xuICAgIGNvbnRlbnQuc3R5bGUuaGVpZ2h0ID0gbWF4SGVpZ2h0ICsgJ3B4JztcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHRpbWxpbmVTd2lwZXJNb2JpbGUgKCkge1xuXG4gIGxldCBzbGlkZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGltZWxpbmUtc2xpZGVyX19zbGlkZScpO1xuXG4gIGlmICghc2xpZGVzLmxlbmd0aCkgcmV0dXJuO1xuXG4gIGlmICh3aW5kb3cubWF0Y2hNZWRpYShcIihtYXgtd2lkdGg6IDUwMXB4KVwiKS5tYXRjaGVzKSB7XG5cbiAgICBzbGlkZXMuZm9yRWFjaChmdW5jdGlvbihzbGlkZSkge1xuICAgICAgaWYgKCFzbGlkZS5jbGFzc0xpc3QuY29udGFpbnMoJ3N3aXBlci1zbGlkZV9faW5pdGlhbCcpKSB7XG4gICAgICAgIHNsaWRlLmNsYXNzTGlzdC5hZGQoJ3N3aXBlci1zbGlkZV9faW5pdGlhbCcpO1xuICAgICAgICBzbGlkZS5jbGFzc0xpc3QuYWRkKCdzd2lwZXItc2xpZGVfX2luaXRpYWwtLW1vYmlsZScpO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHNsaWRlcy5mb3JFYWNoKGZ1bmN0aW9uKHNsaWRlKSB7XG4gICAgICBpZiAoc2xpZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdzd2lwZXItc2xpZGVfX2luaXRpYWwtLW1vYmlsZScpKSB7XG4gICAgICAgIHNsaWRlLmNsYXNzTGlzdC5yZW1vdmUoJ3N3aXBlci1zbGlkZV9faW5pdGlhbCcpO1xuICAgICAgICBzbGlkZS5jbGFzc0xpc3QucmVtb3ZlKCdzd2lwZXItc2xpZGVfX2luaXRpYWwtLW1vYmlsZScpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmxldCBwcm9maWxlc19zd2lwZXI7IC8vIERlY2xhcmUgdGhlIHZhcmlhYmxlIG91dHNpZGUgdGhlIGZ1bmN0aW9ucyBzbyB3ZSBjYW4gYWNjZXNzIGl0IGluc2lkZSBhbGwgZnVuY3Rpb25zXG5cbmZ1bmN0aW9uIGluaXRNb2JpbGVQcm9maWxlcygpIHtcbiAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmJsb2NrLXByb2ZpbGVzX19zd2lwZXJcIikubGVuZ3RoKSByZXR1cm47XG5cbiAgcHJvZmlsZXNfc3dpcGVyID0gbmV3IFN3aXBlcihcIi5ibG9jay1wcm9maWxlc19fc3dpcGVyXCIsIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgbG9vcDogZmFsc2UsXG4gICAgYnJlYWtwb2ludHM6IHtcbiAgICAgIDA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMVxuICAgICAgfSxcbiAgICAgIDc2ODoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLFxuICAgICAgICBzcGFjZUJldHdlZW46IDMwXG4gICAgICB9LFxuICAgICAgOTkyOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICAgIHNwYWNlQmV0d2VlbjogMzBcbiAgICAgIH1cbiAgICB9LFxuICAgIG5hdmlnYXRpb246IHtcbiAgICAgIHByZXZFbDogXCIuc3dpcGVyLXBhZ2luYXRpb25fX3N3aXBlci1idXR0b24tcHJldlwiLFxuICAgICAgbmV4dEVsOiBcIi5zd2lwZXItcGFnaW5hdGlvbl9fc3dpcGVyLWJ1dHRvbi1uZXh0XCJcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBkZXN0cm95TW9iaWxlUHJvZmlsZXMoKSB7XG4gIGlmIChwcm9maWxlc19zd2lwZXIgIT09IHVuZGVmaW5lZCAmJiBwcm9maWxlc19zd2lwZXIgIT09IG51bGwpIHtcbiAgICBwcm9maWxlc19zd2lwZXIuZGVzdHJveSh0cnVlLCB0cnVlKTtcbiAgICBwcm9maWxlc19zd2lwZXIgPSBudWxsOyAvLyBSZXNldCB0aGUgdmFyaWFibGVcbiAgfVxufVxuXG5mdW5jdGlvbiBjYWxjT2Zmc2V0RWxlbWVudEhlaWdodCAoKSB7XG4gIGNvbnN0IG9mZnNldEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm9mZnNldC1lbGVtZW50Jyk7XG4gIGNvbnN0IG9mZnNldEVsZW1lbnRDb250ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ibG9jay1wcm9maWxlc19fc3dpcGVyLS13cmFwcGVyLS1jb250ZW50Jyk7XG5cbiAgaWYgKCFvZmZzZXRFbGVtZW50cy5sZW5ndGggfHwgIW9mZnNldEVsZW1lbnRDb250ZW50cy5sZW5ndGgpIHJldHVybjtcblxuICBvZmZzZXRFbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKCBvZmZzZXRFbGVtZW50LCBpbmRleCApIHtcbiAgICBjb25zdCBvZmZzZXRFbGVtZW50SGVpZ2h0ID0gb2Zmc2V0RWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cbiAgICAvLyBVc2UgdGhlIGluZGV4IG9mIHRoZSBjdXJyZW50IG9mZnNldEVsZW1lbnQgdG8gYWNjZXNzIHRoZSBjb3JyZXNwb25kaW5nIG9mZnNldEVsZW1lbnRDb250ZW50XG4gICAgY29uc3Qgb2Zmc2V0RWxlbWVudENvbnRlbnQgPSBvZmZzZXRFbGVtZW50Q29udGVudHNbaW5kZXhdO1xuXG4gICAgaWYgKCFvZmZzZXRFbGVtZW50Q29udGVudCkgcmV0dXJuO1xuXG4gICAgb2Zmc2V0RWxlbWVudENvbnRlbnQuc3R5bGUuYm90dG9tID0gLSBvZmZzZXRFbGVtZW50SGVpZ2h0ICsgJ3B4JztcbiAgfSk7XG59XG5cbm9uUmVhZHkoKCkgPT4ge1xuICBpbml0Q29udGVudFN3aXBlcigpO1xuICBpbml0VGltZWxpbmVTd2lwZXIoKTtcbiAgaWYod2luZG93LmlubmVyV2lkdGggPiA1MDEpIHtcbiAgICBjYWxjVGltZWxpbmVTd2lwZXJIZWlnaHQoKTtcbiAgfVxuICB0aW1saW5lU3dpcGVyTW9iaWxlKCk7XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKHRpbWxpbmVTd2lwZXJNb2JpbGUsIDIwMCkpO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZShmdW5jdGlvbigpIHtcbiAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDk5MnB4KVwiKS5tYXRjaGVzIHx8XG4gICAgICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1pbi13aWR0aDogOTkycHgpIGFuZCAobWF4LXdpZHRoOiAxMzY2cHgpXCIpLm1hdGNoZXMgfHxcbiAgICAgICAgd2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiAxMzY2cHgpXCIpLm1hdGNoZXMpIHtcbiAgICAgIGNhbGNUaW1lbGluZVN3aXBlckhlaWdodCgpO1xuICAgIH1cbiAgfSwgMjAwKSk7XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKGZ1bmN0aW9uKCkge1xuICAgIGlmKHdpbmRvdy5pbm5lcldpZHRoIDwgMTAyNCkge1xuICAgICAgaW5pdE1vYmlsZVByb2ZpbGVzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlc3Ryb3lNb2JpbGVQcm9maWxlcygpO1xuICAgIH1cbiAgfSwgMjAwKSk7XG5cbiAgaWYod2luZG93LmlubmVyV2lkdGggPCAxMDI0KSB7XG4gICAgaW5pdE1vYmlsZVByb2ZpbGVzKCk7XG4gIH0gZWxzZSB7XG4gICAgZGVzdHJveU1vYmlsZVByb2ZpbGVzKCk7XG4gIH1cblxuICBjYWxjT2Zmc2V0RWxlbWVudEhlaWdodCgpO1xuXG4gIC8vIFNvcnJ5IGZvciB0aGlzLCBidXQgSSBuZWVkZWQgdG8gdXNlIGV4dGVybmFsIGxpYnJhcmllcyB0byBtYWtlIHRoaXMgd29ya1xuICBjb25zdCBtYXJxdWVlU2xpZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcnF1ZWVTbGlkZXInKTtcbiAgaWYgKCFtYXJxdWVlU2xpZGVyKSByZXR1cm47XG4gIGpRdWVyeSgnI21hcnF1ZWVTbGlkZXInKS5ncm91cGxvb3Aoe1xuICAgIHZlbG9jaXR5OiAxLFxuICAgIGZvcndhcmQ6IGZhbHNlLFxuICAgIHBhdXNlT25Ib3ZlcjogdHJ1ZSxcbiAgICBjaGlsZE5vZGU6IFwiLml0ZW1cIixcbiAgICBjaGlsZFdyYXBwZXI6IFwiLml0ZW0td3JhcFwiLFxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7IGNvbnNvbGUubG9nKFwiSW5pdGlhbGl6ZWQgYSBncm91cGxvb3Agd2l0aCBpZDogXCIgKyBqUXVlcnkodGhpcykuYXR0cignaWQnKSk7IH0sXG4gICAgc3RpY2tGaXJzdEl0ZW06IGZhbHNlXG4gIH0pO1xuXG59KTtcbiIsIigoKSA9PiB7XG4gIHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvaGVhZGVyLmpzXCIpO1xuICByZXF1aXJlKFwiLi9jb21wb25lbnRzL3N3aXBlci5qc1wiKTtcbiAgcmVxdWlyZShcIi4vY29tcG9uZW50cy9mZXRjaC1wb3N0cy5qc1wiKTtcbiAgcmVxdWlyZShcIi4vY29tcG9uZW50cy9pbWctcG9wdXAuanNcIik7XG59KSgpOyIsIi8qKlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSB1c2VyIGRlZmluZWQgZnVuY3Rpb24gdG8gZXhlY3V0ZSBvbmx5IHVwb24gc3VjY2Vzc2Z1bCBET00gbG9hZFxuICovXG5leHBvcnQgY29uc3Qgb25SZWFkeSA9IChmbikgPT4ge1xuICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIpIHtcbiAgICBmbigpO1xuICB9IGVsc2Uge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZuKTtcbiAgfVxufTtcblxuLyoqXG4gKiBFeGVjdXRlIGEgZ2l2ZW4gZnVuY3Rpb24gYWZ0ZXIgYSBnaXZpbmcgdGltZW91dCBwZXJpb2RcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsXG4gKiBAcGFyYW0ge251bWJlcn0gdGltZW91dCBJbiBtaWxpc2Vjb25kcyB0aGUgYW1vdW50IG9mIHRpbWUgdG8gd2FpdFxuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5leHBvcnQgY29uc3QgZGVib3VuY2UgPSAoZm4sIHRpbWVvdXQpID0+IHtcbiAgbGV0IHRpbWVvdXRJZDtcblxuICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IGZuLmFwcGx5KHRoaXMsIGFyZ3MpLCB0aW1lb3V0KTtcbiAgfTtcbn07Il19
