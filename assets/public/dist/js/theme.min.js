(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function fetch_posts() {
  const loadMoreBtn = document.querySelector(".load--more");
  if (loadMoreBtn === null) {
    return;
  }
  let postsGrid = document.querySelector(".posts-grid");
  if (postsGrid) {
    if (document.querySelector(".posts-grid").dataset.page == document.querySelector(".posts-grid").dataset.max) {
      loadMoreBtn.style.display = "none";
    }
  } else {
    if (document.querySelector(".site-main").dataset.page == document.querySelector(".site-main").dataset.max) {
      loadMoreBtn.style.display = "none";
    }
  }
  loadMoreBtn.addEventListener("click", async e => {
    e.preventDefault();
    let currentPage = '';
    let postsGrid = document.querySelector(".posts-grid");
    if (postsGrid) {
      currentPage = document.querySelector(".posts-grid").dataset.page;
    } else {
      currentPage = document.querySelector(".site-main").dataset.page;
    }
    let maxPages = document.querySelector(".site-main").dataset.max;
    let isSearch = document.querySelector(".site-main").dataset.search === "is-search";
    let searchField = document.querySelector(".search-form__search-field");
    let searchQuery = '';
    if (searchField) {
      searchQuery = searchField.value;
    }
    let isBlock = postsGrid ? postsGrid.dataset.block === "is-block" : false;
    const postsGridWrapper = document.getElementsByClassName("posts-grid__wrapper")[0];
    const postsGridBtnWrapper = document.getElementsByClassName("posts-grid__btn-wrapper")[0];
    const moreData = new FormData();
    moreData.append("action", "load_more_posts");
    moreData.append("currentPage", currentPage);
    moreData.append("searchQuery", searchQuery);
    moreData.append('_nonce', WP_vars.nonce); // eslint-disable-line

    const dataCall = await fetch(WP_vars.ajaxURL, {
      // eslint-disable-line
      method: "POST",
      body: moreData
    }).then(res => {
      if (res.ok) {
        return res.json(); // Parse the JSON response
      } else {
        throw new Error(`Request failed with status: ${res.status}`);
      }
    }).then(data => {
      if (data && data.data) {
        const htmlString = data.data[0]; // Extract the HTML content from the response

        const maxPages = data.data[1]; // Extract the max pages from the response for search
        console.log(maxPages);
        postsGridBtnWrapper.insertAdjacentHTML("beforebegin", htmlString);
        if (!isSearch && !isBlock) {
          let getUrl = window.location;
          let baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
          window.history.pushState('', '', baseUrl + '/page/' + (parseInt(document.querySelector(".site-main").dataset.page) + 1));
        }
        document.querySelector(".site-main").dataset.page++;
        if (document.querySelector(".site-main").dataset.page == document.querySelector(".site-main").dataset.max) {
          loadMoreBtn.style.display = "none";
        }
        if (isBlock) {
          document.querySelector(".posts-grid").dataset.page++;
          if (document.querySelector(".posts-grid").dataset.page == document.querySelector(".posts-grid").dataset.max) {
            loadMoreBtn.style.display = "none";
          }
        }
        if (isSearch) {
          if (document.querySelector(".site-main").dataset.page == maxPages) {
            loadMoreBtn.style.display = "none";
          }
        }
      } else {
        console.warn('Invalid data received from the server');
      }
    }).catch(err => console.warn(err));
  });
}
(0, _utils.onReady)(() => {
  fetch_posts();
});

},{"../utils":5}],2:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function showMenu() {
  const navigation = document.getElementById("main-navigation");
  const menuItems = document.querySelectorAll("#main-navigation li.children-zero-level.menu-item-has-children");
  const menuOverlay = document.getElementsByClassName("site-header__nav-overlay")[0];
  if (navigation === null || menuItems.length === 0) {
    return;
  }
  menuItems.forEach(menuItem => {
    menuItem.addEventListener("mouseenter", function () {
      navigation.classList.add("menu-active");
      menuOverlay.classList.add("overlay-active");
      this.classList.add("active");
    });
    menuItem.addEventListener("mouseleave", function () {
      navigation.classList.remove("menu-active");
      menuOverlay.classList.remove("overlay-active");
      this.classList.remove("active");
    });
  });
  const subMenu = document.querySelectorAll('.sub-menu li.menu-item-has-children');
  subMenu.forEach(menuItem => {
    menuItem.addEventListener("mouseenter", function () {
      this.classList.add("active");
    });
    menuItem.addEventListener("mouseleave", function () {
      this.classList.remove("active");
    });
  });
}
function getMainNavWidth() {
  const mainNavWidth = document.getElementById("mainNavWidth");
  const getWidth = mainNavWidth.offsetWidth;
  if (getWidth === null) {
    return;
  }
  document.documentElement.style.setProperty("--mainNavWidth", getWidth + "px");
}
function toggleLanguageSwitcher(id, menuClass) {
  const body = document.getElementsByTagName('body')[0];
  const languageIcon = document.getElementById(id);
  const langSubMenu = document.getElementsByClassName(menuClass)[0];
  if (!languageIcon) return;
  languageIcon.addEventListener('click', e => {
    e.preventDefault();
    e.stopPropagation();
    langSubMenu.classList.toggle('active');
  });
  body.addEventListener('click', e => {
    if (!e.target.classList.contains(menuClass)) langSubMenu.classList.remove('active');
  });
}
function languageSwitcher() {
  toggleLanguageSwitcher("languageIcon", "lang-sub-menu");
  toggleLanguageSwitcher("languageIconMobile", "lang-sub-menu-mobile");
}
function triggerSearchBox() {
  const body = document.getElementsByTagName('body')[0];
  const triggerSearchBox = document.getElementById("triggerSearchBox");
  const triggerSearchBoxMobile = document.getElementById("triggerSearchBoxMobile");
  const searchPopup = document.getElementsByClassName("site-header__search-popup")[0];
  if (triggerSearchBox === null || searchPopup === null) {
    return;
  }
  function handleSearchBoxClick(e) {
    e.preventDefault();
    searchPopup.classList.toggle("active");
    body.classList.toggle("disable-scroll-search");
  }
  if (triggerSearchBox) {
    triggerSearchBox.addEventListener("click", handleSearchBoxClick);
  }
  if (triggerSearchBoxMobile) {
    triggerSearchBoxMobile.addEventListener("click", handleSearchBoxClick);
  }
}
function triggerMobileMenu() {
  const body = document.getElementsByTagName('body')[0];
  const hamburger = document.getElementsByClassName("site-header__mobile-wrap--hamburger")[0];
  const mobileMobileMenu = document.getElementsByClassName("mobile-menu")[0];
  if (hamburger === null) {
    return;
  }
  const childrenZeroLevel = document.querySelectorAll('#mobile-menu-navigation li.children-zero-level.menu-item-has-children');
  const childrenFirstLevel = document.querySelectorAll('#mobile-menu-navigation li.children-first-level.menu-item-has-children');
  childrenZeroLevel.forEach(zeroItem => {
    const subMenuToggle = document.createElement('span');
    subMenuToggle.classList.add('sub-menu-toggle');
    subMenuToggle.addEventListener('click', function () {
      this.classList.toggle('active');
      this.parentElement.classList.toggle('active');
    });
    zeroItem.appendChild(subMenuToggle);
  });
  childrenFirstLevel.forEach(firstLevelItem => {
    const subMenuToggleFirstLevel = document.createElement('span');
    subMenuToggleFirstLevel.classList.add('sub-menu-level-two-toggle');
    subMenuToggleFirstLevel.addEventListener('click', function () {
      this.classList.toggle('menu-active');
      this.parentElement.classList.toggle('menu-active');
    });
    firstLevelItem.appendChild(subMenuToggleFirstLevel);
  });
  hamburger.addEventListener("click", function () {
    this.classList.toggle("hamburger--active");
    mobileMobileMenu.classList.toggle("active");
    body.classList.toggle("disable-scroll-search");
  });
}
(0, _utils.onReady)(() => {
  showMenu();
  languageSwitcher();
  triggerSearchBox();
  triggerMobileMenu();

  // TODO: Remove this after fixing the font loading issue.
  setTimeout(() => {
    getMainNavWidth();
  }, 2000);
});

},{"../utils":5}],3:[function(require,module,exports){
"use strict";

var _utils = require("../utils");
function initContentSwiper() {
  if (!document.querySelectorAll(".content-slider__swiper").length) return;
  const content_swiper = new Swiper(".content-slider__swiper", {
    // eslint-disable-line
    slidesPerView: 1,
    spaceBetween: 13.9,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1,
        spaceBetween: 20
      },
      520: {
        slidesPerView: 2,
        spaceBetween: 20
      },
      1024: {
        slidesPerView: 3,
        spaceBetween: 24
      }
    },
    pagination: {
      el: ".swiper-pagination",
      type: "progressbar"
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function initTimelineSwiper() {
  if (!document.querySelectorAll(".timeline-slider__swiper").length) return;
  const timline_swiper = new Swiper(".timeline-slider__swiper", {
    // eslint-disable-line
    slidesPerView: 5,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1
      },
      501: {
        slidesPerView: 2
      },
      992: {
        slidesPerView: 3
      },
      1100: {
        slidesPerView: 4
      }
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function calcTimelineSwiperHeight() {
  const slides = document.querySelectorAll('.timeline-slider__slide');
  if (!slides.length) return;
  let maxHeight = 0;
  slides.forEach(function (slide) {
    const timestamp = slide.querySelector('.timeline-slider__timestamp');
    const content = slide.querySelector('.timeline-slider__content');
    if (!timestamp || !content) return;
    let timestampHeight = timestamp.offsetHeight;
    let contentHeight = content.offsetHeight;
    maxHeight = Math.max(maxHeight, timestampHeight, contentHeight);
  });
  slides.forEach(function (slide) {
    const timestamp = slide.querySelector('.timeline-slider__timestamp');
    const content = slide.querySelector('.timeline-slider__content');
    if (!timestamp || !content) return;
    timestamp.style.height = maxHeight + 'px';
    content.style.height = maxHeight + 'px';
  });
}
function timlineSwiperMobile() {
  let slides = document.querySelectorAll('.timeline-slider__slide');
  if (!slides.length) return;
  if (window.matchMedia("(max-width: 501px)").matches) {
    slides.forEach(function (slide) {
      if (!slide.classList.contains('swiper-slide__initial')) {
        slide.classList.add('swiper-slide__initial');
        slide.classList.add('swiper-slide__initial--mobile');
      }
    });
  } else {
    slides.forEach(function (slide) {
      if (slide.classList.contains('swiper-slide__initial--mobile')) {
        slide.classList.remove('swiper-slide__initial');
        slide.classList.remove('swiper-slide__initial--mobile');
      }
    });
  }
}
let profiles_swiper; // Declare the variable outside the functions

function initMobileProfiles() {
  if (!document.querySelectorAll(".block-profiles__swiper").length) return;
  profiles_swiper = new Swiper(".block-profiles__swiper", {
    // eslint-disable-line
    slidesPerView: 1,
    loop: false,
    breakpoints: {
      0: {
        slidesPerView: 1
      },
      768: {
        slidesPerView: 2,
        spaceBetween: 30
      },
      992: {
        slidesPerView: 2,
        spaceBetween: 30
      }
    },
    navigation: {
      prevEl: ".swiper-pagination__swiper-button-prev",
      nextEl: ".swiper-pagination__swiper-button-next"
    }
  });
}
function destroyMobileProfiles() {
  if (profiles_swiper !== undefined && profiles_swiper !== null) {
    profiles_swiper.destroy(true, true);
    profiles_swiper = null; // Reset the variable
  }
}

(0, _utils.onReady)(() => {
  initContentSwiper();
  initTimelineSwiper();
  if (window.innerWidth > 501) {
    calcTimelineSwiperHeight();
  }
  timlineSwiperMobile();
  window.addEventListener('resize', (0, _utils.debounce)(timlineSwiperMobile, 200));
  window.addEventListener('resize', (0, _utils.debounce)(function () {
    if (window.matchMedia("(min-width: 768px) and (max-width: 992px)").matches || window.matchMedia("(min-width: 992px) and (max-width: 1366px)").matches || window.matchMedia("(min-width: 1366px)").matches) {
      calcTimelineSwiperHeight();
    }
  }, 200));
  window.addEventListener('resize', (0, _utils.debounce)(function () {
    if (window.innerWidth < 1024) {
      initMobileProfiles();
    } else {
      destroyMobileProfiles();
    }
  }, 200));
  if (window.innerWidth < 1024) {
    initMobileProfiles();
  } else {
    destroyMobileProfiles();
  }
});

},{"../utils":5}],4:[function(require,module,exports){
"use strict";

(() => {
  require("./components/header.js");
  require("./components/swiper.js");
  require("./components/fetch-posts.js");
})();

},{"./components/fetch-posts.js":1,"./components/header.js":2,"./components/swiper.js":3}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onReady = exports.debounce = void 0;
/**
 *
 * @param {Function} fn The user defined function to execute only upon successful DOM load
 */
const onReady = fn => {
  if (document.readyState !== "loading") {
    fn();
  } else {
    document.addEventListener("DOMContentLoaded", fn);
  }
};

/**
 * Execute a given function after a giving timeout period
 * @param {Function} fn The function to call
 * @param {number} timeout In miliseconds the amount of time to wait
 * @returns {Function}
 */
exports.onReady = onReady;
const debounce = (fn, timeout) => {
  let timeoutId;
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => fn.apply(this, args), timeout);
  };
};
exports.debounce = debounce;

},{}]},{},[1,2,3,4,5])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhc3NldHMvcHVibGljL3NyYy9qcy9jb21wb25lbnRzL2ZldGNoLXBvc3RzLmpzIiwiYXNzZXRzL3B1YmxpYy9zcmMvanMvY29tcG9uZW50cy9oZWFkZXIuanMiLCJhc3NldHMvcHVibGljL3NyYy9qcy9jb21wb25lbnRzL3N3aXBlci5qcyIsImFzc2V0cy9wdWJsaWMvc3JjL2pzL2RlZmF1bHQuanMiLCJhc3NldHMvcHVibGljL3NyYy9qcy91dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBLFlBQVk7O0FBRVosSUFBQSxNQUFBLEdBQUEsT0FBQTtBQUVBLFNBQVMsV0FBVyxDQUFBLEVBQUc7RUFDckIsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUM7RUFFekQsSUFBSSxXQUFXLEtBQUssSUFBSSxFQUFFO0lBQ3hCO0VBQ0Y7RUFFQSxJQUFJLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQztFQUVyRCxJQUFLLFNBQVMsRUFBRztJQUNmLElBQUksUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtNQUMzRyxXQUFXLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNO0lBQ3BDO0VBQ0YsQ0FBQyxNQUFNO0lBQ0wsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO01BQ3pHLFdBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU07SUFDcEM7RUFDRjtFQUVBLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FB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QUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUM7RUFDN0QsQ0FBQztBQUNILENBQUM7QUFBQyxPQUFBLENBQUEsUUFBQSxHQUFBLFFBQUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgb25SZWFkeSB9IGZyb20gXCIuLi91dGlsc1wiO1xuXG5mdW5jdGlvbiBmZXRjaF9wb3N0cygpIHtcbiAgY29uc3QgbG9hZE1vcmVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmxvYWQtLW1vcmVcIik7XG5cbiAgaWYgKGxvYWRNb3JlQnRuID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbGV0IHBvc3RzR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKTtcblxuICBpZiAoIHBvc3RzR3JpZCApIHtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQucGFnZSA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RzLWdyaWRcIikuZGF0YXNldC5tYXgpIHtcbiAgICAgIGxvYWRNb3JlQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZSA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0Lm1heCkge1xuICAgICAgbG9hZE1vcmVCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbiAgfVxuXG4gIGxvYWRNb3JlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhc3luYyAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGxldCBjdXJyZW50UGFnZSA9ICcnO1xuXG4gICAgbGV0IHBvc3RzR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdHMtZ3JpZFwiKTtcblxuICAgIGlmICggcG9zdHNHcmlkICkge1xuICAgICAgY3VycmVudFBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RzLWdyaWRcIikuZGF0YXNldC5wYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50UGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZTtcbiAgICB9XG4gICAgXG4gICAgbGV0IG1heFBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5tYXg7XG4gICAgbGV0IGlzU2VhcmNoID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5zZWFyY2ggPT09IFwiaXMtc2VhcmNoXCI7XG5cbiAgICBsZXQgc2VhcmNoRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlYXJjaC1mb3JtX19zZWFyY2gtZmllbGRcIik7XG5cbiAgICBsZXQgc2VhcmNoUXVlcnkgPSAnJztcblxuICAgIGlmICggc2VhcmNoRmllbGQgKSB7XG4gICAgICBzZWFyY2hRdWVyeSA9IHNlYXJjaEZpZWxkLnZhbHVlO1xuICAgIH1cblxuICAgIGxldCBpc0Jsb2NrID0gcG9zdHNHcmlkID8gcG9zdHNHcmlkLmRhdGFzZXQuYmxvY2sgPT09IFwiaXMtYmxvY2tcIiA6IGZhbHNlO1xuXG4gICAgY29uc3QgcG9zdHNHcmlkV3JhcHBlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJwb3N0cy1ncmlkX193cmFwcGVyXCIpWzBdO1xuICAgIGNvbnN0IHBvc3RzR3JpZEJ0bldyYXBwZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwicG9zdHMtZ3JpZF9fYnRuLXdyYXBwZXJcIilbMF07XG5cbiAgICBjb25zdCBtb3JlRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuXG4gICAgbW9yZURhdGEuYXBwZW5kKFwiYWN0aW9uXCIsIFwibG9hZF9tb3JlX3Bvc3RzXCIpO1xuICAgIG1vcmVEYXRhLmFwcGVuZChcImN1cnJlbnRQYWdlXCIsIGN1cnJlbnRQYWdlKTtcbiAgICBtb3JlRGF0YS5hcHBlbmQoXCJzZWFyY2hRdWVyeVwiLCBzZWFyY2hRdWVyeSk7XG4gICAgbW9yZURhdGEuYXBwZW5kKCdfbm9uY2UnLCBXUF92YXJzLm5vbmNlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgY29uc3QgZGF0YUNhbGwgPSBhd2FpdCBmZXRjaChXUF92YXJzLmFqYXhVUkwsIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGJvZHk6IG1vcmVEYXRhXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpOyAvLyBQYXJzZSB0aGUgSlNPTiByZXNwb25zZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXM6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIGlmIChkYXRhICYmIGRhdGEuZGF0YSkge1xuICAgICAgICAgIGNvbnN0IGh0bWxTdHJpbmcgPSBkYXRhLmRhdGFbMF07IC8vIEV4dHJhY3QgdGhlIEhUTUwgY29udGVudCBmcm9tIHRoZSByZXNwb25zZVxuXG4gICAgICAgICAgY29uc3QgbWF4UGFnZXMgPSBkYXRhLmRhdGFbMV07IC8vIEV4dHJhY3QgdGhlIG1heCBwYWdlcyBmcm9tIHRoZSByZXNwb25zZSBmb3Igc2VhcmNoXG4gICAgICAgICAgY29uc29sZS5sb2cobWF4UGFnZXMpO1xuXG4gICAgICAgICAgcG9zdHNHcmlkQnRuV3JhcHBlci5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmViZWdpblwiLCBodG1sU3RyaW5nKTtcblxuICAgICAgICAgIGlmICggISBpc1NlYXJjaCAmJiAhIGlzQmxvY2sgKSB7XG4gICAgICAgICAgICBsZXQgZ2V0VXJsID0gd2luZG93LmxvY2F0aW9uO1xuICAgICAgICAgICAgbGV0IGJhc2VVcmwgPSBnZXRVcmwucHJvdG9jb2wgKyBcIi8vXCIgKyBnZXRVcmwuaG9zdCArIFwiL1wiICsgZ2V0VXJsLnBhdGhuYW1lLnNwbGl0KCcvJylbMV07XG4gICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoJycsICcnLCBiYXNlVXJsICsgJy9wYWdlLycgKyAocGFyc2VJbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5wYWdlKSArIDEpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0LnBhZ2UrKztcblxuICAgICAgICAgIFxuICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpdGUtbWFpblwiKS5kYXRhc2V0LnBhZ2UgPT0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zaXRlLW1haW5cIikuZGF0YXNldC5tYXgpIHtcbiAgICAgICAgICAgIGxvYWRNb3JlQnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCBpc0Jsb2NrICkge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQucGFnZSsrO1xuXG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3N0cy1ncmlkXCIpLmRhdGFzZXQucGFnZSA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RzLWdyaWRcIikuZGF0YXNldC5tYXgpIHtcbiAgICAgICAgICAgICAgbG9hZE1vcmVCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICggaXNTZWFyY2ggKSB7XG4gICAgICAgICAgICBpZiAoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2l0ZS1tYWluXCIpLmRhdGFzZXQucGFnZSA9PSBtYXhQYWdlcyApIHtcbiAgICAgICAgICAgICAgbG9hZE1vcmVCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ0ludmFsaWQgZGF0YSByZWNlaXZlZCBmcm9tIHRoZSBzZXJ2ZXInKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLndhcm4oZXJyKSk7XG4gIH0pO1xufVxuXG5vblJlYWR5KCgpID0+IHtcbiAgZmV0Y2hfcG9zdHMoKTtcbn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IG9uUmVhZHkgfSBmcm9tIFwiLi4vdXRpbHNcIjtcblxuZnVuY3Rpb24gc2hvd01lbnUoKSB7XG4gIGNvbnN0IG5hdmlnYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW4tbmF2aWdhdGlvblwiKTtcbiAgY29uc3QgbWVudUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNtYWluLW5hdmlnYXRpb24gbGkuY2hpbGRyZW4temVyby1sZXZlbC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuXCIpO1xuICBjb25zdCBtZW51T3ZlcmxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXG4gICAgXCJzaXRlLWhlYWRlcl9fbmF2LW92ZXJsYXlcIlxuICApWzBdO1xuICBcblxuICBpZiAobmF2aWdhdGlvbiA9PT0gbnVsbCB8fCBtZW51SXRlbXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgbWVudUl0ZW1zLmZvckVhY2goKG1lbnVJdGVtKSA9PiB7XG4gICAgbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBuYXZpZ2F0aW9uLmNsYXNzTGlzdC5hZGQoXCJtZW51LWFjdGl2ZVwiKTtcbiAgICAgIG1lbnVPdmVybGF5LmNsYXNzTGlzdC5hZGQoXCJvdmVybGF5LWFjdGl2ZVwiKTtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICB9KTtcbiAgXG4gICAgbWVudUl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBuYXZpZ2F0aW9uLmNsYXNzTGlzdC5yZW1vdmUoXCJtZW51LWFjdGl2ZVwiKTtcbiAgICAgIG1lbnVPdmVybGF5LmNsYXNzTGlzdC5yZW1vdmUoXCJvdmVybGF5LWFjdGl2ZVwiKTtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgXG4gIGNvbnN0IHN1Yk1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3ViLW1lbnUgbGkubWVudS1pdGVtLWhhcy1jaGlsZHJlbicpO1xuICBcbiAgc3ViTWVudS5mb3JFYWNoKChtZW51SXRlbSkgPT4ge1xuICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICAgIH0pO1xuICBcbiAgICBtZW51SXRlbS5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICB9KTtcbiAgfSk7XG5cbn1cblxuZnVuY3Rpb24gZ2V0TWFpbk5hdldpZHRoKCkge1xuICBjb25zdCBtYWluTmF2V2lkdGggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5OYXZXaWR0aFwiKTtcbiAgY29uc3QgZ2V0V2lkdGggPSBtYWluTmF2V2lkdGgub2Zmc2V0V2lkdGg7XG5cbiAgaWYgKGdldFdpZHRoID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KFwiLS1tYWluTmF2V2lkdGhcIiwgZ2V0V2lkdGggKyBcInB4XCIpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVMYW5ndWFnZVN3aXRjaGVyKGlkLCBtZW51Q2xhc3MpIHtcbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07XG4gIGNvbnN0IGxhbmd1YWdlSWNvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgY29uc3QgbGFuZ1N1Yk1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKG1lbnVDbGFzcylbMF07XG5cbiAgaWYgKCFsYW5ndWFnZUljb24pIHJldHVybjtcblxuICBsYW5ndWFnZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBsYW5nU3ViTWVudS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcbiAgfSk7XG5cbiAgYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgIGlmICghZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKG1lbnVDbGFzcykpIGxhbmdTdWJNZW51LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gbGFuZ3VhZ2VTd2l0Y2hlcigpIHtcbiAgdG9nZ2xlTGFuZ3VhZ2VTd2l0Y2hlcihcImxhbmd1YWdlSWNvblwiLCBcImxhbmctc3ViLW1lbnVcIik7XG4gIHRvZ2dsZUxhbmd1YWdlU3dpdGNoZXIoXCJsYW5ndWFnZUljb25Nb2JpbGVcIiwgXCJsYW5nLXN1Yi1tZW51LW1vYmlsZVwiKTtcbn1cblxuZnVuY3Rpb24gdHJpZ2dlclNlYXJjaEJveCgpIHtcbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07XG4gIGNvbnN0IHRyaWdnZXJTZWFyY2hCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyaWdnZXJTZWFyY2hCb3hcIik7XG4gIGNvbnN0IHRyaWdnZXJTZWFyY2hCb3hNb2JpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRyaWdnZXJTZWFyY2hCb3hNb2JpbGVcIik7XG4gIGNvbnN0IHNlYXJjaFBvcHVwID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNpdGUtaGVhZGVyX19zZWFyY2gtcG9wdXBcIilbMF07XG5cbiAgaWYgKHRyaWdnZXJTZWFyY2hCb3ggPT09IG51bGwgfHwgc2VhcmNoUG9wdXAgPT09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVTZWFyY2hCb3hDbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHNlYXJjaFBvcHVwLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XG4gICAgYm9keS5jbGFzc0xpc3QudG9nZ2xlKFwiZGlzYWJsZS1zY3JvbGwtc2VhcmNoXCIpO1xuICB9XG5cbiAgaWYgKHRyaWdnZXJTZWFyY2hCb3gpIHtcbiAgICB0cmlnZ2VyU2VhcmNoQm94LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVTZWFyY2hCb3hDbGljayk7XG4gIH1cblxuICBpZiAodHJpZ2dlclNlYXJjaEJveE1vYmlsZSkge1xuICAgIHRyaWdnZXJTZWFyY2hCb3hNb2JpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZVNlYXJjaEJveENsaWNrKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0cmlnZ2VyTW9iaWxlTWVudSgpIHtcbiAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07XG4gIGNvbnN0IGhhbWJ1cmdlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJzaXRlLWhlYWRlcl9fbW9iaWxlLXdyYXAtLWhhbWJ1cmdlclwiKVswXTtcbiAgY29uc3QgbW9iaWxlTW9iaWxlTWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtb2JpbGUtbWVudVwiKVswXTtcblxuICBpZiAoaGFtYnVyZ2VyID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgY2hpbGRyZW5aZXJvTGV2ZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbW9iaWxlLW1lbnUtbmF2aWdhdGlvbiBsaS5jaGlsZHJlbi16ZXJvLWxldmVsLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4nKTtcbiAgY29uc3QgY2hpbGRyZW5GaXJzdExldmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI21vYmlsZS1tZW51LW5hdmlnYXRpb24gbGkuY2hpbGRyZW4tZmlyc3QtbGV2ZWwubWVudS1pdGVtLWhhcy1jaGlsZHJlbicpO1xuICBcbiAgY2hpbGRyZW5aZXJvTGV2ZWwuZm9yRWFjaCgoemVyb0l0ZW0pID0+IHtcbiAgICBjb25zdCBzdWJNZW51VG9nZ2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIHN1Yk1lbnVUb2dnbGUuY2xhc3NMaXN0LmFkZCgnc3ViLW1lbnUtdG9nZ2xlJyk7XG4gICAgXG4gICAgc3ViTWVudVRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG4gICAgICB0aGlzLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG4gICAgfSk7XG4gICAgXG4gICAgemVyb0l0ZW0uYXBwZW5kQ2hpbGQoc3ViTWVudVRvZ2dsZSk7XG4gIH0pO1xuXG4gIGNoaWxkcmVuRmlyc3RMZXZlbC5mb3JFYWNoKChmaXJzdExldmVsSXRlbSkgPT4ge1xuICAgIGNvbnN0IHN1Yk1lbnVUb2dnbGVGaXJzdExldmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIHN1Yk1lbnVUb2dnbGVGaXJzdExldmVsLmNsYXNzTGlzdC5hZGQoJ3N1Yi1tZW51LWxldmVsLXR3by10b2dnbGUnKTtcbiAgXG4gICAgc3ViTWVudVRvZ2dsZUZpcnN0TGV2ZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoJ21lbnUtYWN0aXZlJyk7XG4gICAgICB0aGlzLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnbWVudS1hY3RpdmUnKTtcbiAgICB9KTtcblxuICAgIGZpcnN0TGV2ZWxJdGVtLmFwcGVuZENoaWxkKHN1Yk1lbnVUb2dnbGVGaXJzdExldmVsKTtcbiAgfSk7XG5cbiAgaGFtYnVyZ2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmNsYXNzTGlzdC50b2dnbGUoXCJoYW1idXJnZXItLWFjdGl2ZVwiKTtcbiAgICBtb2JpbGVNb2JpbGVNZW51LmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XG4gICAgYm9keS5jbGFzc0xpc3QudG9nZ2xlKFwiZGlzYWJsZS1zY3JvbGwtc2VhcmNoXCIpO1xuICB9KTtcbn1cblxub25SZWFkeSgoKSA9PiB7XG4gIHNob3dNZW51KCk7XG4gIGxhbmd1YWdlU3dpdGNoZXIoKTtcbiAgdHJpZ2dlclNlYXJjaEJveCgpO1xuICB0cmlnZ2VyTW9iaWxlTWVudSgpO1xuXG4gIC8vIFRPRE86IFJlbW92ZSB0aGlzIGFmdGVyIGZpeGluZyB0aGUgZm9udCBsb2FkaW5nIGlzc3VlLlxuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICBnZXRNYWluTmF2V2lkdGgoKTtcbiAgfSwgMjAwMCk7XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBvblJlYWR5LCBkZWJvdW5jZSB9IGZyb20gXCIuLi91dGlsc1wiO1xuXG5mdW5jdGlvbiBpbml0Q29udGVudFN3aXBlcigpIHtcbiAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNvbnRlbnQtc2xpZGVyX19zd2lwZXJcIikubGVuZ3RoKSByZXR1cm47XG5cbiAgY29uc3QgY29udGVudF9zd2lwZXIgPSBuZXcgU3dpcGVyKFwiLmNvbnRlbnQtc2xpZGVyX19zd2lwZXJcIiwgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgc2xpZGVzUGVyVmlldzogMSxcbiAgICBzcGFjZUJldHdlZW46IDEzLjksXG4gICAgbG9vcDogZmFsc2UsXG4gICAgYnJlYWtwb2ludHM6IHtcbiAgICAgIDA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcbiAgICAgICAgc3BhY2VCZXR3ZWVuOiAyMFxuICAgICAgfSxcbiAgICAgIDUyMDoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLFxuICAgICAgICBzcGFjZUJldHdlZW46IDIwXG4gICAgICB9LFxuICAgICAgMTAyNDoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAzLFxuICAgICAgICBzcGFjZUJldHdlZW46IDI0XG4gICAgICB9XG4gICAgfSxcbiAgICBwYWdpbmF0aW9uOiB7XG4gICAgICBlbDogXCIuc3dpcGVyLXBhZ2luYXRpb25cIixcbiAgICAgIHR5cGU6IFwicHJvZ3Jlc3NiYXJcIlxuICAgIH0sXG4gICAgbmF2aWdhdGlvbjoge1xuICAgICAgcHJldkVsOiBcIi5zd2lwZXItcGFnaW5hdGlvbl9fc3dpcGVyLWJ1dHRvbi1wcmV2XCIsXG4gICAgICBuZXh0RWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uX19zd2lwZXItYnV0dG9uLW5leHRcIlxuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGluaXRUaW1lbGluZVN3aXBlcigpIHtcbiAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRpbWVsaW5lLXNsaWRlcl9fc3dpcGVyXCIpLmxlbmd0aCkgcmV0dXJuO1xuXG4gIGNvbnN0IHRpbWxpbmVfc3dpcGVyID0gbmV3IFN3aXBlcihcIi50aW1lbGluZS1zbGlkZXJfX3N3aXBlclwiLCB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBzbGlkZXNQZXJWaWV3OiA1LFxuICAgIGxvb3A6IGZhbHNlLFxuICAgIGJyZWFrcG9pbnRzOiB7XG4gICAgICAwOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDFcbiAgICAgIH0sXG4gICAgICA1MDE6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMlxuICAgICAgfSxcbiAgICAgIDk5Mjoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAzXG4gICAgICB9LFxuICAgICAgMTEwMDoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiA0XG4gICAgICB9XG4gICAgfSxcbiAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICBwcmV2RWw6IFwiLnN3aXBlci1wYWdpbmF0aW9uX19zd2lwZXItYnV0dG9uLXByZXZcIixcbiAgICAgIG5leHRFbDogXCIuc3dpcGVyLXBhZ2luYXRpb25fX3N3aXBlci1idXR0b24tbmV4dFwiXG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY2FsY1RpbWVsaW5lU3dpcGVySGVpZ2h0KCkge1xuICBjb25zdCBzbGlkZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGltZWxpbmUtc2xpZGVyX19zbGlkZScpO1xuXG4gIGlmICghc2xpZGVzLmxlbmd0aCkgcmV0dXJuO1xuXG4gIGxldCBtYXhIZWlnaHQgPSAwO1xuXG4gIHNsaWRlcy5mb3JFYWNoKGZ1bmN0aW9uKCBzbGlkZSApIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBzbGlkZS5xdWVyeVNlbGVjdG9yKCcudGltZWxpbmUtc2xpZGVyX190aW1lc3RhbXAnKTtcbiAgICBjb25zdCBjb250ZW50ID0gc2xpZGUucXVlcnlTZWxlY3RvcignLnRpbWVsaW5lLXNsaWRlcl9fY29udGVudCcpO1xuXG4gICAgaWYgKCF0aW1lc3RhbXAgfHwgIWNvbnRlbnQpIHJldHVybjtcbiAgICBsZXQgdGltZXN0YW1wSGVpZ2h0ID0gdGltZXN0YW1wLm9mZnNldEhlaWdodDtcbiAgICBsZXQgY29udGVudEhlaWdodCA9IGNvbnRlbnQub2Zmc2V0SGVpZ2h0O1xuXG4gICAgbWF4SGVpZ2h0ID0gTWF0aC5tYXgobWF4SGVpZ2h0LCB0aW1lc3RhbXBIZWlnaHQsIGNvbnRlbnRIZWlnaHQpO1xuICB9KTtcblxuICBzbGlkZXMuZm9yRWFjaChmdW5jdGlvbiggc2xpZGUgKSB7XG4gICAgY29uc3QgdGltZXN0YW1wID0gc2xpZGUucXVlcnlTZWxlY3RvcignLnRpbWVsaW5lLXNsaWRlcl9fdGltZXN0YW1wJyk7XG4gICAgY29uc3QgY29udGVudCA9IHNsaWRlLnF1ZXJ5U2VsZWN0b3IoJy50aW1lbGluZS1zbGlkZXJfX2NvbnRlbnQnKTtcblxuICAgIGlmICghdGltZXN0YW1wIHx8ICFjb250ZW50KSByZXR1cm47XG4gICAgdGltZXN0YW1wLnN0eWxlLmhlaWdodCA9IG1heEhlaWdodCArICdweCc7XG4gICAgY29udGVudC5zdHlsZS5oZWlnaHQgPSBtYXhIZWlnaHQgKyAncHgnO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gdGltbGluZVN3aXBlck1vYmlsZSAoKSB7XG5cbiAgbGV0IHNsaWRlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50aW1lbGluZS1zbGlkZXJfX3NsaWRlJyk7XG5cbiAgaWYgKCFzbGlkZXMubGVuZ3RoKSByZXR1cm47XG5cbiAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1heC13aWR0aDogNTAxcHgpXCIpLm1hdGNoZXMpIHtcblxuICAgIHNsaWRlcy5mb3JFYWNoKGZ1bmN0aW9uKHNsaWRlKSB7XG4gICAgICBpZiAoIXNsaWRlLmNsYXNzTGlzdC5jb250YWlucygnc3dpcGVyLXNsaWRlX19pbml0aWFsJykpIHtcbiAgICAgICAgc2xpZGUuY2xhc3NMaXN0LmFkZCgnc3dpcGVyLXNsaWRlX19pbml0aWFsJyk7XG4gICAgICAgIHNsaWRlLmNsYXNzTGlzdC5hZGQoJ3N3aXBlci1zbGlkZV9faW5pdGlhbC0tbW9iaWxlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc2xpZGVzLmZvckVhY2goZnVuY3Rpb24oc2xpZGUpIHtcbiAgICAgIGlmIChzbGlkZS5jbGFzc0xpc3QuY29udGFpbnMoJ3N3aXBlci1zbGlkZV9faW5pdGlhbC0tbW9iaWxlJykpIHtcbiAgICAgICAgc2xpZGUuY2xhc3NMaXN0LnJlbW92ZSgnc3dpcGVyLXNsaWRlX19pbml0aWFsJyk7XG4gICAgICAgIHNsaWRlLmNsYXNzTGlzdC5yZW1vdmUoJ3N3aXBlci1zbGlkZV9faW5pdGlhbC0tbW9iaWxlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxubGV0IHByb2ZpbGVzX3N3aXBlcjsgLy8gRGVjbGFyZSB0aGUgdmFyaWFibGUgb3V0c2lkZSB0aGUgZnVuY3Rpb25zXG5cbmZ1bmN0aW9uIGluaXRNb2JpbGVQcm9maWxlcygpIHtcbiAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmJsb2NrLXByb2ZpbGVzX19zd2lwZXJcIikubGVuZ3RoKSByZXR1cm47XG5cbiAgcHJvZmlsZXNfc3dpcGVyID0gbmV3IFN3aXBlcihcIi5ibG9jay1wcm9maWxlc19fc3dpcGVyXCIsIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgbG9vcDogZmFsc2UsXG4gICAgYnJlYWtwb2ludHM6IHtcbiAgICAgIDA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMVxuICAgICAgfSxcbiAgICAgIDc2ODoge1xuICAgICAgICBzbGlkZXNQZXJWaWV3OiAyLFxuICAgICAgICBzcGFjZUJldHdlZW46IDMwXG4gICAgICB9LFxuICAgICAgOTkyOiB7XG4gICAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICAgIHNwYWNlQmV0d2VlbjogMzBcbiAgICAgIH1cbiAgICB9LFxuICAgIG5hdmlnYXRpb246IHtcbiAgICAgIHByZXZFbDogXCIuc3dpcGVyLXBhZ2luYXRpb25fX3N3aXBlci1idXR0b24tcHJldlwiLFxuICAgICAgbmV4dEVsOiBcIi5zd2lwZXItcGFnaW5hdGlvbl9fc3dpcGVyLWJ1dHRvbi1uZXh0XCJcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBkZXN0cm95TW9iaWxlUHJvZmlsZXMoKSB7XG4gIGlmIChwcm9maWxlc19zd2lwZXIgIT09IHVuZGVmaW5lZCAmJiBwcm9maWxlc19zd2lwZXIgIT09IG51bGwpIHtcbiAgICBwcm9maWxlc19zd2lwZXIuZGVzdHJveSh0cnVlLCB0cnVlKTtcbiAgICBwcm9maWxlc19zd2lwZXIgPSBudWxsOyAvLyBSZXNldCB0aGUgdmFyaWFibGVcbiAgfVxufVxuXG5vblJlYWR5KCgpID0+IHtcbiAgaW5pdENvbnRlbnRTd2lwZXIoKTtcbiAgaW5pdFRpbWVsaW5lU3dpcGVyKCk7XG4gIGlmKHdpbmRvdy5pbm5lcldpZHRoID4gNTAxKSB7XG4gICAgY2FsY1RpbWVsaW5lU3dpcGVySGVpZ2h0KCk7XG4gIH1cbiAgdGltbGluZVN3aXBlck1vYmlsZSgpO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZSh0aW1saW5lU3dpcGVyTW9iaWxlLCAyMDApKTtcblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZGVib3VuY2UoZnVuY3Rpb24oKSB7XG4gICAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiA5OTJweClcIikubWF0Y2hlcyB8fFxuICAgICAgICB3aW5kb3cubWF0Y2hNZWRpYShcIihtaW4td2lkdGg6IDk5MnB4KSBhbmQgKG1heC13aWR0aDogMTM2NnB4KVwiKS5tYXRjaGVzIHx8XG4gICAgICAgIHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1pbi13aWR0aDogMTM2NnB4KVwiKS5tYXRjaGVzKSB7XG4gICAgICBjYWxjVGltZWxpbmVTd2lwZXJIZWlnaHQoKTtcbiAgICB9XG4gIH0sIDIwMCkpO1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZShmdW5jdGlvbigpIHtcbiAgICBpZih3aW5kb3cuaW5uZXJXaWR0aCA8IDEwMjQpIHtcbiAgICAgIGluaXRNb2JpbGVQcm9maWxlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZXN0cm95TW9iaWxlUHJvZmlsZXMoKTtcbiAgICB9XG4gIH0sIDIwMCkpO1xuXG4gIGlmKHdpbmRvdy5pbm5lcldpZHRoIDwgMTAyNCkge1xuICAgIGluaXRNb2JpbGVQcm9maWxlcygpO1xuICB9IGVsc2Uge1xuICAgIGRlc3Ryb3lNb2JpbGVQcm9maWxlcygpO1xuICB9XG5cbn0pO1xuIiwiKCgpID0+IHtcbiAgcmVxdWlyZShcIi4vY29tcG9uZW50cy9oZWFkZXIuanNcIik7XG4gIHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvc3dpcGVyLmpzXCIpO1xuICByZXF1aXJlKFwiLi9jb21wb25lbnRzL2ZldGNoLXBvc3RzLmpzXCIpO1xufSkoKTsiLCIvKipcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgdXNlciBkZWZpbmVkIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgb25seSB1cG9uIHN1Y2Nlc3NmdWwgRE9NIGxvYWRcbiAqL1xuZXhwb3J0IGNvbnN0IG9uUmVhZHkgPSAoZm4pID0+IHtcbiAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiKSB7XG4gICAgZm4oKTtcbiAgfSBlbHNlIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmbik7XG4gIH1cbn07XG5cbi8qKlxuICogRXhlY3V0ZSBhIGdpdmVuIGZ1bmN0aW9uIGFmdGVyIGEgZ2l2aW5nIHRpbWVvdXQgcGVyaW9kXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbFxuICogQHBhcmFtIHtudW1iZXJ9IHRpbWVvdXQgSW4gbWlsaXNlY29uZHMgdGhlIGFtb3VudCBvZiB0aW1lIHRvIHdhaXRcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlYm91bmNlID0gKGZuLCB0aW1lb3V0KSA9PiB7XG4gIGxldCB0aW1lb3V0SWQ7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiBmbi5hcHBseSh0aGlzLCBhcmdzKSwgdGltZW91dCk7XG4gIH07XG59OyJdfQ==
